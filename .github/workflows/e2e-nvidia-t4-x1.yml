# SPDX-License-Identifier: Apache-2.0

name: E2E (NVIDIA Tesla T4 x1)

on:
  # run against every merge commit to 'main' and release branches
  push:
    branches:
      - main
      - release-*
  # only run on PRs that touch certain regex paths
  pull_request_target:
    branches:
      - main
      - release-*
    paths:
      # note this should match the merging criteria in 'mergify.yml'
      - '**.py'
      - 'pyproject.toml'
      - 'requirements**.txt'
      - 'scripts/e2e-ci.sh' # Used by this workflow
      - 'scripts/test-data/**'
      - 'src/instructlab/profiles/**'
      - '.github/workflows/e2e-nvidia-t4-x1.yml' # This workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  LC_ALL: en_US.UTF-8
  TMPDIR: /home/tmp

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  e2e-small-workflow-ready:
    permissions:
      checks: read
    uses: ./.github/workflows/status-checks.yml
    with:
      job_ids: >- # Space-separated job ids to wait on for status checks
        DCO
        actionlint
        markdown-lint
        shellcheck
        lint-workflow-complete

  start-small-ec2-runner:
    needs:
      - e2e-small-workflow-ready
    runs-on: ubuntu-latest
    env:
      INSTANCE_TYPE: "g4dn.2xlarge"
    outputs:
      label: ${{ steps.selected-availability-zone.outputs.label }}
      ec2-instance-id: ${{ steps.selected-availability-zone.outputs.ec2-instance-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # https://github.com/actions/checkout/issues/249
          fetch-depth: 0

      # We need to free disk space to avoid the "No space left on device" error on our GH runner
      - name: Free disk space
        uses: ./.github/actions/free-disk-space

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      # Attempt to launch the EC2 runner on us-east-2a. If it fails to launch due to insufficient capacity
      # for this instance, we will continue and try another availability zone within this region.
      - name: Attempt to start EC2 runner on us-east-2a
        id: start-ec2-runner-us-east-2a
        uses: machulav/ec2-github-runner@fcfb31a5760dad1314a64a0e172b78ec6fc8a17e # v2.3.6
        continue-on-error: true
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ${{ vars.AWS_EC2_AMI }}
          ec2-instance-type: ${{ env.INSTANCE_TYPE }}
          subnet-id: subnet-02d230cffd9385bd4
          security-group-id: sg-06300447c4a5fbef3
          iam-role-name: instructlab-ci-runner
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "instructlab-ci-github-small-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"},
              {"Key": "GitHubRef", "Value": "${{ github.ref }}"},
              {"Key": "GitHubPR", "Value": "${{ github.event.number }}"}
            ]

      # Fallback in case of failure
      - name: Attempt to start EC2 runner on us-east-2b (if us-east-2a failed)
        if: steps.start-ec2-runner-us-east-2a.outcome == 'failure'
        id: start-ec2-runner-us-east-2b
        uses: machulav/ec2-github-runner@fcfb31a5760dad1314a64a0e172b78ec6fc8a17e # v2.3.6
        continue-on-error: true
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ${{ vars.AWS_EC2_AMI }}
          ec2-instance-type: ${{ env.INSTANCE_TYPE }}
          subnet-id: subnet-024298cefa3bedd61
          security-group-id: sg-06300447c4a5fbef3
          iam-role-name: instructlab-ci-runner
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "instructlab-ci-github-small-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"},
              {"Key": "GitHubRef", "Value": "${{ github.ref }}"},
              {"Key": "GitHubPR", "Value": "${{ github.event.number }}"}
            ]

      # Only try us-east-2c if the previous two availability zones had no availability, but
      # do not continue if we see a failure here. Assume we've exhausted all options at that
      # point in time.
      - name: Attempt to start EC2 runner on us-east-2c (if us-east-2b failed)
        if: steps.start-ec2-runner-us-east-2b.outcome == 'failure'
        id: start-ec2-runner-us-east-2c
        uses: machulav/ec2-github-runner@fcfb31a5760dad1314a64a0e172b78ec6fc8a17e # v2.3.6
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ${{ vars.AWS_EC2_AMI }}
          ec2-instance-type: ${{ env.INSTANCE_TYPE }}
          subnet-id: subnet-04701a08396b2ed01
          security-group-id: sg-06300447c4a5fbef3
          iam-role-name: instructlab-ci-runner
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "instructlab-ci-github-small-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"},
              {"Key": "GitHubRef", "Value": "${{ github.ref }}"},
              {"Key": "GitHubPR", "Value": "${{ github.event.number }}"}
            ]

      - name: Determine EC2 availability zone used
        id: selected-availability-zone
        run: |
          # shellcheck disable=SC2086 # False positive error from shellcheck about word splitting/gobbling
          if [ "${{ steps.start-ec2-runner-us-east-2a.outcome }}" = "success" ]; then
            echo "label=${{ steps.start-ec2-runner-us-east-2a.outputs.label }}" >> $GITHUB_OUTPUT
            echo "ec2-instance-id=${{ steps.start-ec2-runner-us-east-2a.outputs.ec2-instance-id }}" >> $GITHUB_OUTPUT
          elif [ "${{ steps.start-ec2-runner-us-east-2b.outcome }}" = "success" ]; then
            echo "label=${{ steps.start-ec2-runner-us-east-2b.outputs.label }}" >> $GITHUB_OUTPUT
            echo "ec2-instance-id=${{ steps.start-ec2-runner-us-east-2b.outputs.ec2-instance-id }}" >> $GITHUB_OUTPUT
          elif [ "${{ steps.start-ec2-runner-us-east-2c.outcome }}" = "success" ]; then
            echo "label=${{ steps.start-ec2-runner-us-east-2c.outputs.label }}" >> $GITHUB_OUTPUT
            echo "ec2-instance-id=${{ steps.start-ec2-runner-us-east-2c.outputs.ec2-instance-id }}" >> $GITHUB_OUTPUT
          fi

  e2e-small-test:
    needs:
      - start-small-ec2-runner
    runs-on: ${{ needs.start-small-ec2-runner.outputs.label }}

    # It is important that this job has no write permissions and has
    # no access to any secrets. This part (e2e-test) is where we are running
    # untrusted code from PRs.
    permissions: {}

    steps:
      - name: Install Packages
        run: |
          cat /etc/os-release
          mkdir -p /home/tmp
          sudo dnf install -y gcc gcc-c++ make git python3.11 python3.11-devel

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # https://github.com/actions/checkout/issues/249
          fetch-depth: 0

      - name: Install dependent PRs if needed
        uses: depends-on/depends-on-action@61cb3f4a0e2c8ae4b90c9448dc57c7ba9ca24c35 # main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch and checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        run: |
          git fetch origin pull/${{ github.event.number }}/head:pr-${{ github.event.number }}
          git checkout pr-${{ github.event.number }}

      - name: Install ilab
        run: |
          export PATH="/home/ec2-user/.local/bin:/usr/local/cuda/bin:$PATH"
          python3.11 -m venv --upgrade-deps venv
          . venv/bin/activate
          nvidia-smi
          python3.11 -m pip cache remove llama_cpp_python

          CMAKE_ARGS="-DGGML_CUDA=on" python3.11 -m pip install -v .

          # https://github.com/instructlab/instructlab/issues/1821
          # install with Torch and build dependencies installed
          python3.11 -m pip install -v packaging wheel setuptools-scm
          python3.11 -m pip install -v .[cuda]

      - name: Check disk before tests
        run: |
          df -h

      - name: Run e2e test
        run: |
          . venv/bin/activate
          ./scripts/e2e-ci.sh -s

      - name: Check disk after tests
        run: |
          df -h

  stop-small-ec2-runner:
    needs:
      - start-small-ec2-runner
      - e2e-small-test
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@fcfb31a5760dad1314a64a0e172b78ec6fc8a17e # v2.3.6
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-small-ec2-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-small-ec2-runner.outputs.ec2-instance-id }}

  e2e-small-workflow-complete:
    # we don't want to block PRs on failed EC2 cleanup
    # so not requiring "stop-small-ec2-runner" as well
    permissions:
      checks: read
    uses: ./.github/workflows/status-checks.yml
    with:
      job_ids: >- # Space-separated job ids to wait on for status checks
        e2e-small-workflow-ready
        start-small-ec2-runner
        e2e-small-test
